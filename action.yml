name: 'Duvet'
description: 'Uses Duvet to generate a compliance report and uploads it to s3'
inputs:
  report-script:
    description: 'Path to script that generates a duvet report'
    required: true
  aws-access-key-id:
    description: 'AWS access key ID with S3 permissions'
    required: true
  aws-secret-access-key:
    description: 'AWS secret access key'
    required: true
  aws-s3-bucket-name:
    description: 'Destination S3 bucket for duvet reports'
    required: true
  aws-s3-region:
    description: 'Region of the S3 bucket'
    required: true
  cdn:
    description: 'Prefix the S3 URL with a CDN'
    required: false
runs:
  using: "composite"
  steps:
    - id: quic-dir
      run: |
        PWD=$(pwd)
        S2N_QUIC_DIR=$(mktemp -d -p $PWD)
        echo "::set-output name=S2N_QUIC_DIR::$S2N_QUIC_DIR"
      shell: bash

    - uses: actions/checkout@v3
      with:
        repository: aws/s2n-quic
        path: "${{ steps.quic-dir.outputs.S2N_QUIC_DIR }}"
        submodules: true

    - uses: actions-rs/toolchain@v1.0.7
      id: toolchain
      with:
        toolchain: stable
        override: true

    - uses: camshaft/rust-cache@v1

    - name: Install Duvet
      working-directory: "${{ steps.quic-dir.outputs.S2N_QUIC_DIR }}/common/duvet"
      run: cargo install --path .
      shell: bash

    - name: Generate Duvet report
      working-directory: "${{ github.workspace }}"
      run: "${{ inputs.report-script }} ${{ github.sha }}"
      shell: bash

    - uses: aws-actions/configure-aws-credentials@v1.6.1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key}}
        aws-region: ${{ inputs.aws-s3-region }}

    - name: Upload to S3
      id: s3
      run: |
        REPORT_DIR=$(dirname "${{ inputs.report-script }}")
        TARGET="${{ github.sha }}/compliance.html"
        aws s3 cp "$REPORT_DIR/report.html" "s3://${{ inputs.aws-s3-bucket-name }}/$TARGET" --acl private --follow-symlinks
        
        if [ -n "${{ inputs.cdn }}" ]; then
          PREFIX="${{ inputs.cdn }}"
        else
          PREFIX="https://${{ inputs.aws-s3-bucket-name }}.s3.amazonaws.com"
        fi
        URL="$PREFIX/$TARGET"
        
        echo "::set-output name=URL::$URL"
      shell: bash

    - uses: ouzi-dev/commit-status-updater@v1.1.2
      with:
        name: "compliance / report"
        status: "success"
        url: "${{ steps.s3.outputs.URL }}"
